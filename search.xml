<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[【生活感悟】在创业公司实习的这20天]]></title>
      <url>http://yoursite.com/2017/01/11/%E3%80%90%E7%94%9F%E6%B4%BB%E6%84%9F%E6%82%9F%E3%80%91%E5%9C%A8%E5%88%9B%E4%B8%9A%E5%85%AC%E5%8F%B8%E5%AE%9E%E4%B9%A0%E7%9A%84%E8%BF%9920%E5%A4%A9/</url>
      <content type="html"><![CDATA[<p>从2016-12-19号开始去师兄的公司实习，当时师兄和导师征求了下意见，老师说我没有问题的话就可以过去，然后我就开始了在师兄公司的实习经历，算是自己职业生涯中第一份履历了，最近也颇有一些感悟，所以记录下来。</p>
<a id="more"></a>
<h2 id="一些基本的事情"><a href="#一些基本的事情" class="headerlink" title="一些基本的事情"></a>一些基本的事情</h2><p>从北大到公司需要一个小时，早上理论上需要9:30到公司，开始我都是9点多点儿到，后来越来越晚，现在经常10点到的情况也是有的。公司在中关村东升科技园，东升科技园应该算是科技创新企业集中的园区，我们所在的泰利驿站算是初创企业的集中营，里边零零散散的分布着很多的公司，公司在泰利驿站里占据着西北角，现在大概有9个工位的样子，公司有4名核心技术人员，3名实习生，和两名负责市场的师姐。在公司吃饭是有一些贵的，大概在15-20之间，总体要比在学校吃贵80%的样子。在公司我终于坐上了喜欢的工位，要是在实验室也有这么宽敞的工位就好了。</p>
<p><img src="http://oe1w1bbwt.bkt.clouddn.com/20170111/QQ%E5%9B%BE%E7%89%8720170111222834.jpg" alt=""></p>
<p>右边的摄像头就是我们公司的产品了，全景的摄像机，主要是有两位小米过来的硬件工程师设计开发的，再配合上公司的软件，就可以实现全景视频的系统了。我在公司主要是参与软件部分的维护，以及一些公司网站的事情。</p>
<h2 id="实习的感受"><a href="#实习的感受" class="headerlink" title="实习的感受"></a>实习的感受</h2><p>首先，公司的氛围的话，还是蛮不错的，平时交流不多，大家都有自己负责的部分，各忙各的。工作的大环境稍微有些吵，隔壁好像是做企业网络办公产品的，经常讨论些网页、excel之类的，氛围跟我们完全不一样，他们的老大好像也是北大毕业的，经常给其他人分配任务，甚至教大家如何实现git之类的事情，感觉比我们low多了。</p>
<p>然后，手头上的事情话，今天刚刚解决了一个推流的小bug，算是在公司达成的第一个小成就。其他部分就是从过来就开始准备实现的，给我们的系统增加音频部分，还有很多的路要走，准备先在自己的小系统上实现一下，移植过去应该要简单些，以前并没有接触过类似的工作。感觉今后还可以慢慢的给自己的小系统增加功能，可以增加一些物体检测之类的算法，不断的砌砖，以后开源出来供初学者学习也很不错。</p>
<p>公司的娱乐活动的话不多，大家最常做的娱乐活动就是天气好的话，午饭以后一起在园区里散散步，吹吹风（寒风），畅想畅想公司的未来。不过，圣诞的时候，大家一起在师兄家嗨皮了一把，玩德州扑克第一个把所有筹码输光，感受了一把xbox，还是蛮不错的，听beast+的蓝牙音箱，玩了很久的只言片语，还是蛮开心的。</p>
<p><img src="http://oe1w1bbwt.bkt.clouddn.com/20170111/QQ%E5%9B%BE%E7%89%8720170111222821.jpg" alt=""></p>
<p>最近的生活状态呢，基本上属于按时打卡型的，早上9点多到，晚上7点多回来，在学校的学五食堂吃吃晚饭，回宿舍充充电（学些机器学习入门的东西），很轻松，慢慢的也适应了这种生活，刚刚开始的时候还觉得超级累呢，而其每天挤公交都觉得生活特别无望，现在慢慢的都习惯了，感觉最近成熟了很多。</p>
<h2 id="写在最后的话"><a href="#写在最后的话" class="headerlink" title="写在最后的话"></a>写在最后的话</h2><p>2017年也开始一周多了，这一年注定要发生很多的大事，做出一些重要的决定，是不是要出国或者留在学校读博士呢，能不能转到一个合适的研究方向上去呢，能不能找到一个称心如意的女朋友呢，甚至，可不可以找到一份好的工作呢。不过每一个都特别期待，也相信生活会很美好的，2017以来，开心起来，拥抱未来。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HAS（HTTP Adaptive Streaming）研究热点总结]]></title>
      <url>http://yoursite.com/2016/10/15/research%20point%20on%20HAS/</url>
      <content type="html"><![CDATA[<p>HAS的初衷就是为了提高用户观看视频的体验，充分利用带宽状况来提供质量更好的视频。所以，关于HAS的研究以及部署，也都是围绕着提高用户的QoE(quality of experience)来做。总结下来有以下3个的研究方向：<strong>服务器</strong>、<strong>网络</strong>、<strong>客户端</strong>。下面就从这3个方面做详细的介绍。<br><a id="more"></a></p>
<h2 id="Part-1-服务器端"><a href="#Part-1-服务器端" class="headerlink" title="Part 1: 服务器端"></a>Part 1: 服务器端</h2><hr>
<p>服务器作为视频内容提供环节，主要是涉及到视频内容准备的过程，包括以下几个方面。</p>
<h3 id="one-layer-or-multi-layer-coding（单层-or-多层编码）"><a href="#one-layer-or-multi-layer-coding（单层-or-多层编码）" class="headerlink" title="one-layer or multi-layer coding（单层 or 多层编码）"></a>one-layer or multi-layer coding（单层 or 多层编码）</h3><p>HAS提供不同码率的实现方式也很多样，</p>
<ul>
<li>一是one-layer coding，就是通过调节编码参数来获取不同码率的视频，这种实现方式比较常见。</li>
<li>二是multi-layer coding，这种实现是借助了SVC(scalable video coding)多层编码的特性。</li>
</ul>
<p>one-layer coding的适应算法在下面会有详解，此处简单介绍下DASH-SVC方案。<br>SVC（scalable video coding）可以提供一个<strong>base layer</strong>和一个或多个<strong>enhance layer</strong>，其适应算法有以下经验，</p>
<ul>
<li>首先保证了base layer的传输就保证了视频的流畅播放，如果带宽状况允许的话，再请求enhance layer来提高视频的质量</li>
<li>base layer improving is more import than higher quality layers（提升基本层优于提升增强层）</li>
<li>higher quality in the end of a video clip leads to higher QoE</li>
</ul>
<h3 id="preparation-of-the-content（视频内容呈现方式）"><a href="#preparation-of-the-content（视频内容呈现方式）" class="headerlink" title="preparation of the content（视频内容呈现方式）"></a>preparation of the content（视频内容呈现方式）</h3><p>视频内容呈现方式包括以下研究点，</p>
<blockquote>
<p>segment length（1s - 15s)</p>
</blockquote>
<ul>
<li><strong>large segment</strong>的话可以提高编码的效率，相同的bit rate可以提供质量更好的视频。</li>
<li>但是，<strong>large segment</strong>会增加播放延迟、更长的初始化时间、对带宽播放反应滞后。</li>
<li>对于直播，由于要求低延迟，一定要用<strong>small segment</strong>（延迟随segment size直线下降，130ms的segment可以获得1s左右的延迟）</li>
<li>当然，segment size的下降必然会增加HTTP请求，增加了额外的网络负担。</li>
</ul>
<blockquote>
<p>available bit rate</p>
</blockquote>
<ul>
<li>太过多的bit rate必定会增加编码耗时以及服务器存储负担（点播）</li>
<li>典型的实现方式（Youtube）是<strong>5种</strong>bit rate</li>
</ul>
<h3 id="adaptation-dimension-多码率实现方式"><a href="#adaptation-dimension-多码率实现方式" class="headerlink" title="adaptation dimension(多码率实现方式)"></a>adaptation dimension(多码率实现方式)</h3><p>在视频编码中可以通过以下三个维度来实现编码视频码率的下降，frame rate、resolution、QP，这一部分和视频编码中QoE和bit rate的研究完全一致，简单介绍如下，</p>
<blockquote>
<p>temporal adaptation: frame rate</p>
</blockquote>
<ul>
<li>in order to achieve 80% of original bitrate, need to reduce 60% frame rate. quality degradation is significant.</li>
<li>reduction of frame rate has little impact on high motion videos.</li>
</ul>
<blockquote>
<p>spatial adaptation: resolution</p>
</blockquote>
<ul>
<li>spatial resolution is the key criteration for QoE for small screen</li>
<li>impact of resolution depends mainly on the content and the device</li>
<li>for the same video bit rate, higher resolution is perceived worse</li>
</ul>
<blockquote>
<p>image quality adaptation: QP</p>
</blockquote>
<ul>
<li>decrease bit rate by 30% without any loss in quality(paper:Optimizing video coding adaptive streaming over HTTP)</li>
<li>increasing bit rate the video quality increases but eventually saturates.</li>
</ul>
<blockquote>
<p>multiple dimensions</p>
</blockquote>
<ul>
<li>通过以上多个参数配合来调节bit rate</li>
<li>there exists an encoding which maximizes the user-perceived quality for a given target bit rate.（paper: User perception of adaptive video quality)</li>
<li>fast foreground motion like soccer reducing frame is preferred to reducing frame quality</li>
</ul>
<h2 id="Part-2-网络"><a href="#Part-2-网络" class="headerlink" title="Part 2: 网络"></a>Part 2: 网络</h2><hr>
<p>网络这个层次上的研究包含两个大的方面，<strong>网络层次的适应算法</strong>、<strong>网络带宽竞争机制</strong>。<br><strong>网络层次的适应算法</strong>,指在网络上重定向客户端的bit rate请求，来获取一个整体的QoE提升。<br><strong>网络带宽竞争机制</strong>包括多个播放器竞争的公平机制以及播放器和其他上网应用之间的竞争。</p>
<h3 id="Interactions-between-network-entities"><a href="#Interactions-between-network-entities" class="headerlink" title="Interactions between network entities"></a>Interactions between network entities</h3><p>本节涉及到较多了TCP传输协议知识，现在并不能很好的理解。</p>
<blockquote>
<p>Interactions between HAS Players</p>
</blockquote>
<p>对于同一个网络中存在多个播放器的情况，有以下三个方面的问题需要考虑，stability、fairness and bandwidth utilization</p>
<ul>
<li>播放器之间能否分享网络，并维持一个稳定的状态（没有太多的码率切换）？</li>
<li>播放器之间能否公平的分享网络带宽？</li>
<li>多个播放器的竞争会不会降低网络带宽的利用率？</li>
</ul>
<blockquote>
<p>Interactions between HAS Players and other applications</p>
</blockquote>
<p>这一方面的研究不足。</p>
<blockquote>
<p>Interactions between other applications and HAS Players</p>
</blockquote>
<p>aggressive player对其他上网应用的影响，</p>
<ul>
<li>由于有很多的HTTP request of small files，会导致排队时间增长，严重影响大文件的传输以及实时的应用。</li>
</ul>
<blockquote>
<p>Interactions between HAS Players and TCP</p>
</blockquote>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>上一节介绍了由于竞争网络带宽带来的一些问题，本节就来介绍一些解决方案，存在以下三个方面的解决方案，</p>
<blockquote>
<p>server based approaches</p>
</blockquote>
<p>后续补充。</p>
<blockquote>
<p>network based approaches</p>
</blockquote>
<p><strong>SDN</strong>(software defined network)可以重定向HAS请求，基于此可以做一些网络上的适应算法。</p>
<blockquote>
<p>proxy and client based approaches</p>
</blockquote>
<p>通过一个上层的proxy server来分配带宽，或者，让多个client之间互相通信，了解对方的带宽状况，从而解决上一节遇到的问题。</p>
<h2 id="Part-3-客户端"><a href="#Part-3-客户端" class="headerlink" title="Part 3: 客户端"></a>Part 3: 客户端</h2><hr>
<p>客户端涉及到<strong>adaptation algo.</strong>，这一块MPEG-DASH标准并没有做规定，所以在这块的研究也最为火热，这一块的研究可以分为影响QoE的因素和参与adaptation algo.的参数两个方面进行分解。</p>
<h3 id="影响QoE的因素"><a href="#影响QoE的因素" class="headerlink" title="影响QoE的因素"></a>影响QoE的因素</h3><p>影响QoE的因素包括<strong>init delay</strong>、<strong>representation switch events</strong>、<strong>stalling</strong>、<strong>media throughput</strong>、<strong>network utilisation</strong>等几个因素，研究多是针对前三个因素，后边两个因素常用作评价标准，在优化前三个因素的基础上，最大化后边2个因素是自适应码率算法的追求目标。</p>
<blockquote>
<p>init delay</p>
</blockquote>
<ul>
<li>跟segment size &amp; init buffer直接相关</li>
<li>小的init buffer可以降低init delay，但是会增加播放后stalling的可能性</li>
<li>playout buffer可以抵消临时的带宽波动，使得播放更加平滑</li>
<li>the impact of init delays on QoE of video streaming is not severe.</li>
</ul>
<blockquote>
<p>representation switch events</p>
</blockquote>
<ul>
<li>降低视频质量的影响比提升视频质量的影响大，有研究表明，<strong>突然提高视频质量反而会提升QoE</strong>，因为用户更愿意看到视频质量提升。（paper: Representation switch smoothing for adaptive HTTP streaming）</li>
<li>逐渐切换可以降低切换对QoE的影响，switching amplitude and recency effects can be neglected if more than two switches occur</li>
<li><strong>相对于切换频率，长时间播放低质量视频会更加影响QoE</strong>（Assessing  effect sizes of influence factors towards a QoE model for HTTP adaptive streaming)</li>
</ul>
<blockquote>
<p>stalling</p>
</blockquote>
<ul>
<li>large buffer: 需要更多的内存（对于移动设备不合适） &amp; 更长的初始化等待</li>
</ul>
<h3 id="parameters-of-adaptation-algo"><a href="#parameters-of-adaptation-algo" class="headerlink" title="parameters of adaptation algo."></a>parameters of adaptation algo.</h3><p>当前常见的算法多采用如下几个系统参数来作为adaptation algo.的输入参数，<strong>预测带宽</strong>、<strong>video buffer size</strong>等。下面结合多种adaptation algo.来介绍这几个参数的运用，</p>
<blockquote>
<p>bandwidth estimation algo.</p>
</blockquote>
<ul>
<li>（paper: Review of bandwidth estimation tools and application to bandwidth adaptive video streaming)</li>
<li>可以分为passive &amp; active measurement两种预测方式，active measurement需要额外的probe packet，HAS多是采用passive的方式</li>
</ul>
<blockquote>
<p>adaptation algo.</p>
</blockquote>
<p>具体的adaptation algo.以后会分专题讲解，此文只讲一些概括性的东西。由于其发展的很快，所以我都是重点关注些最新的算法。</p>
<ul>
<li>Pipelined DASH: several segment can be requested at a time</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>国庆假期看了些关于HAS领域概括性的文章，特将研究热点总结出来，供交流讨论及自己以后翻看。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://yoursite.com/2016/10/14/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
